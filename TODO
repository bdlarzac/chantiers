
Pour voir les fonctions qui ne renvoient pas des pointeurs :
grep -rn func model/ | grep '\[\]' | grep -v '\[\]\*' | grep -v '\[\]string' | grep -v '\[\]int'

- revoir les fonctions String() de transport, rangement, chargement, livraison :
Le test sur transporteur / rangeur / chargeur / livreur n'est pas valable
+ spécifier le nom dans le cdc

- uniformiser VenteCharge.MoNHeure et PlaqRange.CoNheure
  dans PlaqRange, conducteur est traité d'abord, dans VenteCharge, Outil est traité d'abord ; modifier VenteCharge
  Dans PlaqRange, remplacer le préfixe Co par Mo dans les noms des champs
- + vérifier convention utilisée pour uppercase suivant le N dans les noms des chanps (toutes les tables)

- model : remplacer Scan par sqlx

- Tester évolution du stock sur les hangars à plaquette
- tester delete ou update tas dans un Plaq
- Création loyer stockage : vérifier par ajax cohérence avec les loyers déjà existant (?)
- tester liste stockages avec stockages archivés
- loyer lieu de stockage, new, update : vérifier que les dates ne chevauchent pas ?

- BDD : voir not null ou pas

- Acteurs : créer champ "propriétaire" et "fournisseur" - ajouter acteur BDL
- Voir si possible de supprimer Acteur.Propriétaire
- tester deletable pour acteur ; bug
- Faire en sorte que les acteurs BDL et GFA ne soient pas supprimables ?
- (a *Acteur) GetActivitesByDate et GetAffactureActivitesByDate() : trier par date

- js : faire des promesses pour remplacer async=true
- js : remplacer partout var par let ou const qd c'est possible
- js : dans form bspied, initialize() : remplacer setTimeout() par une promesse
- js : getActeursPossibles() et getLDPossibles() peuvent être factorisés
- js : factoriser code de calcul de id acteur dans validateForm()
- Autocomplete LD : bug lorsqu'il y a une apostrophe
- trier alpha autocomplete sur nom acteur

- Supprimer gestion d'erreur inutile, car filtrée par html5 ; par ex
	bsp.PrixStere, err = strconv.ParseFloat(r.PostFormValue("prixstere"), 32)

- utiliser tiglib.Round partout ou ParseFloat est utilisé dans l'analyse des forms (fait dans plaqtrans et dans plaqop).

- voir bug DEVEZ GRAN / DEVEZ GRAND

- html : remplacer scripts dans footer par scripts dans header avec attribut defer

- css : unifier "entities" "liste-carac" par "th-left"
- css : nottoyer table border et table bordered

- read mdb / windows

- UG : Surf_Recalcul ou Surf_SIG ?

- dans UG.type_coupe : garder 0 0 ?

- Comment modéliser ça :
  id  |   code   |   type_coupe    | previsionnel_coupe |      type_peuplement       | surface  
------+----------+-----------------+--------------------+----------------------------+----------
   24 | XIII-21  | ESP2 2021       | ESP3               | PS                         |  1.71119
   25 | XIII-21  | ESP2 2021       | ESP3               | PS                         |  0.41453
   26 | XIII-21  | ESP2 2021       | ESP3               | PS                         |  0.08319



Notes vrac
--------------------

debug.stack()
go.dev
bookmyname

access : mattn/go-adodb
https://www.microsoft.com/en-us/download/details.aspx?id=54920

pour embarquer les static et templates dans l'exe : genesis
(à utiliser éventuellement avec go generate)
https://github.com/benbjohnson/genesis

go mod vendor

voir pyramid pour la philo middleware, acl

