
Pour voir les fonctions qui ne renvoient pas des pointeurs :
grep -rn func model/ | grep '\[\]' | grep -v '\[\]\*' | grep -v '\[\]string' | grep -v '\[\]int'

2023
--------------------------------------------------------------------------------------------------
- Nettoyer la table des fermiers non agricoles ; voir les associations parcelle_fermier qui restent.

- recherche sylvi - dans js:
Uncaught ReferenceError: choixPeriode_validateForm is not defined
    validateForm http://localhost:8012/sylviculture/recherche:676
    onsubmit http://localhost:8012/sylviculture/recherche:1


#9 lien chantier parcelle
--------------------------------------------------------------------------------------------------

Erreur appel UG.ComputeRecap()
Erreur query : select id from chaufer where id_ug =$1
pq: la colonne « id_ug » n'existe pas
=> écrire func (ug *UG) ComputeChantiers(db *sqlx.DB, typeChantier string) error {}

Utiliser insert / update LiensChantier UG / Parcelle dans model/chantier-lien.go dans insert / update de model / plaq et chautre 

Noter dans la doc : convention : type_chantier = nom de la table du chantier
Utilisé dans model.computeIdsChantiersFromUG()

--------------------------------------------------------------------------------------------------

- Gérer erreur de conception : table essence redondante avec type typessence

- view/common/chantier-lien.html : baseURL est initialisé à 2 endroits => supprimer le 2e et tester

- page d'erreur : prendre en compte version prod / dev (fond bleu)

- Voir css, utiliser normalize.css - séparer style.css en style.css et style-bdl.css

- Possible d'implémenter Acteur.IsDeletable() avec des select count(), plus économiques
  Acteur.GetActivitesByDate() génère beaucoup de requêtes inutiles
  
- en cours : bug plaq 2 - fermier 43 : comment un fermier inexistant a pu être associé au chantier
    => dans table fermier, dissocier id et id_sctl ?

- Erreur dans base SCTL : 
    UG XIX.77 => lieux-dits SERRES DES ARETS et SERRE DES ARETS => sont vraiment différents ?

- Attention, on ne doit pas pouvoir supprimer l'acteur BDL

- chaufer : l'unité doit être uniquement la stère

- vente charge update - bug sur tas => tas déclaré vide donc n'apparaît pas dans la liste des tas à choisir

- form acteur : revoir validation

- control/bilans : factoriser le calcul date debut / date fin

- check config paths:logiciel-foncier

- Compléter recap ug

- sauvegarde des données - tester si config pas bonne ou pas remplie

- Comment réagit l'appli pour des chantiers à cheval sur plusieurs années ?

- model : remplacer Scan par sqlx
- Finir de nettoyer le model (fonctions inutiles, jointures au lieu de plusieurs select)
  surtout parcelle / ug / lieudit 
- ré-écrire model.GetUGsFromLieudit() avec jointures (?)
    aussi voir GetStockage() GetActeur()

- Sortir BDL, SCTL, GFA des acteurs ???

- Vérifier tous les cas de response vide au lieu de null
    response = await response.json();
    if(response == null){
=> pas d'erreur si null ?

- revoir les fonctions String() de transport, rangement, chargement, livraison :
Le test sur transporteur / rangeur / chargeur / livreur n'est plus valable
+ spécifier le nom dans le cdc

- uniformiser VenteCharge.MoNHeure et PlaqRange.CoNheure
  dans PlaqRange, conducteur est traité d'abord, dans VenteCharge, Outil est traité d'abord ; modifier VenteCharge
  Dans PlaqRange, remplacer le préfixe Co par Mo dans les noms des champs
  
- vérifier convention utilisée pour uppercase suivant le N dans les noms des champs (toutes les tables)

- Tester évolution du stock sur les hangars à plaquette
- tester delete ou update tas dans un Plaq
- loyer lieu de stockage, new, update : vérifier que les dates ne chevauchent pas ?

- BDD : voir not null ou pas

- Acteurs : créer champ "propriétaire" et "fournisseur" - ajouter acteur BDL
- Voir si possible de supprimer Acteur.Propriétaire
- tester deletable pour acteur ; bug
- Faire en sorte que les acteurs BDL et GFA ne soient pas supprimables ?
- (a *Acteur) GetActivitesByDate et GetAffactureActivitesByDate() : trier par date

- js : factoriser code de calcul de id acteur dans validateForm()
- Autocomplete LD : bug lorsqu'il y a une apostrophe
- trier alpha autocomplete sur nom acteur

- Supprimer gestion d'erreur inutile, car filtrée par html5 ; par ex
	bsp.PrixStere, err = strconv.ParseFloat(r.PostFormValue("prixstere"), 32)

- utiliser tiglib.Round partout ou ParseFloat est utilisé dans l'analyse des forms (fait dans plaqtrans et dans plaqop).

- voir bug DEVEZ GRAN / DEVEZ GRAND

- UG : Surf_Recalcul ou Surf_SIG ? Demander Jean Cullié

- dans UG.type_coupe : garder 0 0 ?

- Comment modéliser ça :
  id  |   code   |   type_coupe    | previsionnel_coupe |      type_peuplement       | surface  
--------------------------------------------------------------------------------------------------
   24 | XIII-21  | ESP2 2021       | ESP3               | PS                         |  1.71119
   25 | XIII-21  | ESP2 2021       | ESP3               | PS                         |  0.41453
   26 | XIII-21  | ESP2 2021       | ESP3               | PS                         |  0.08319



Notes vrac
--------------------------------------------------------------------------------------------------

debug.stack()
go.dev
bookmyname

access : mattn/go-adodb
https://www.microsoft.com/en-us/download/details.aspx?id=54920

go mod vendor

voir pyramid pour la philo middleware, acl

